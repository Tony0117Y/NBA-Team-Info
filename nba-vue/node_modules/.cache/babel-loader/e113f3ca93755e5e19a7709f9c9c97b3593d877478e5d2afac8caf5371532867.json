{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  setup() {\n    const teams = ref([]);\n    const searchQuery = ref(\"\");\n    const filteredTeams = ref([]);\n    const router = useRouter();\n\n    // Fetch teams with error handling\n    const fetchTeams = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/teams\");\n        console.log('API Response:', response.data);\n\n        // Validate response structure\n        if (!Array.isArray(response.data?.teams)) {\n          throw new Error('Invalid teams data format');\n        }\n        teams.value = response.data.teams;\n        filteredTeams.value = response.data.teams;\n      } catch (error) {\n        console.error(\"Team fetch failed:\", error);\n        // Fallback data for testing\n        teams.value = [{\n          id: 1,\n          full_name: \"Atlanta Hawks\"\n        }, {\n          id: 2,\n          full_name: \"Boston Celtics\"\n        }, {\n          id: 3,\n          full_name: \"Chicago Bulls\"\n        }];\n        filteredTeams.value = teams.value;\n      }\n    };\n\n    // Simplified filter function\n    const filterTeams = () => {\n      const query = searchQuery.value.trim().toLowerCase();\n      console.log(`Filtering with query: \"${query}\"`);\n      if (!query) {\n        filteredTeams.value = teams.value;\n        return;\n      }\n      filteredTeams.value = teams.value.filter(team => team.full_name.toLowerCase().includes(query));\n      console.log('Filter Results:', filteredTeams.value);\n    };\n    const showTeamDetails = team => {\n      sessionStorage.setItem(\"selectedTeam\", JSON.stringify(team));\n      router.push(\"/teaminfo\");\n    };\n    onMounted(fetchTeams);\n    return {\n      teams,\n      searchQuery,\n      filteredTeams,\n      filterTeams,\n      showTeamDetails\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","axios","setup","teams","searchQuery","filteredTeams","router","fetchTeams","response","get","console","log","data","Array","isArray","Error","value","error","id","full_name","filterTeams","query","trim","toLowerCase","filter","team","includes","showTeamDetails","sessionStorage","setItem","JSON","stringify","push"],"sources":["/Users/tony/Desktop/MyPortfolios/Random_Projects/NbaStats/nba-vue/src/components/TeamList.vue"],"sourcesContent":["<template>\n  <div>\n    <n-layout>\n      <n-layout-header style=\"background-color: #001529; color: white; padding: 20px; text-align: center;\">\n        <h1>NBA Teams</h1>\n      </n-layout-header>\n\n      <n-layout-content style=\"padding: 20px;\">\n        <!-- Search Bar -->\n        <n-input\n          class=\"search-bar\"\n          v-model:value=\"searchQuery\"\n          placeholder=\"Search for a team!\"\n          clearable\n          @update:value=\"filterTeams\"\n          style=\"margin-bottom: 20px; width: 100%;\"\n          \n        />\n\n        <!-- Filtered Teams List -->\n        <n-card\n          class=\"card\"\n          v-for=\"team in filteredTeams\"\n          :key=\"team.id\"\n          style=\"margin-bottom: 20px;\"\n          hoverable\n        >\n          <h2>{{ team.full_name }}</h2>\n          <n-button class=\"button\" type=\"primary\" @click=\"showTeamDetails(team)\">View Details</n-button>\n        </n-card>\n\n        <!-- No Results Message -->\n        <n-card v-if=\"filteredTeams.length === 0 && searchQuery.trim() !== ''\">\n          <h2>No teams found for \"{{ searchQuery }}\"</h2>\n        </n-card>\n      </n-layout-content>\n    </n-layout>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\n\nexport default {\n  setup() {\n    const teams = ref([]);\n    const searchQuery = ref(\"\");\n    const filteredTeams = ref([]);\n    const router = useRouter();\n\n    // Fetch teams with error handling\n    const fetchTeams = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/teams\");\n        console.log('API Response:', response.data);\n        \n        // Validate response structure\n        if (!Array.isArray(response.data?.teams)) {\n          throw new Error('Invalid teams data format');\n        }\n        \n        teams.value = response.data.teams;\n        filteredTeams.value = response.data.teams;\n      } catch (error) {\n        console.error(\"Team fetch failed:\", error);\n        // Fallback data for testing\n        teams.value = [\n          { id: 1, full_name: \"Atlanta Hawks\" },\n          { id: 2, full_name: \"Boston Celtics\" },\n          { id: 3, full_name: \"Chicago Bulls\" }\n        ];\n        filteredTeams.value = teams.value;\n      }\n    };\n\n    // Simplified filter function\n    const filterTeams = () => {\n      const query = searchQuery.value.trim().toLowerCase();\n      console.log(`Filtering with query: \"${query}\"`);\n\n      if (!query) {\n        filteredTeams.value = teams.value;\n        return;\n      }\n\n      filteredTeams.value = teams.value.filter(team => \n        team.full_name.toLowerCase().includes(query)\n      );\n\n      console.log('Filter Results:', filteredTeams.value);\n    };\n\n    const showTeamDetails = (team) => {\n      sessionStorage.setItem(\"selectedTeam\", JSON.stringify(team));\n      router.push(\"/teaminfo\");\n    };\n\n    onMounted(fetchTeams);\n\n    return {\n      teams,\n      searchQuery,\n      filteredTeams,\n      filterTeams,\n      showTeamDetails,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.search-bar {\n  border-color: #C8102E !important;\n}\n\n.button{\n  background: #1D428A;\n  border-color: #C8102E;\n}\n.button:hover{\n  border-color: #1D428A;\n  background: #C8102E;\n}\n.card {\n  border-color: \t#C8102E;\n}\n\nh1 {\n  margin: 0;\n}\n</style>"],"mappings":";;;AAyCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMM,WAAU,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMO,aAAY,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMQ,MAAK,GAAIN,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMO,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,6BAA6B,CAAC;QAC/DC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;;QAE3C;QACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,EAAET,KAAK,CAAC,EAAE;UACxC,MAAM,IAAIY,KAAK,CAAC,2BAA2B,CAAC;QAC9C;QAEAZ,KAAK,CAACa,KAAI,GAAIR,QAAQ,CAACI,IAAI,CAACT,KAAK;QACjCE,aAAa,CAACW,KAAI,GAAIR,QAAQ,CAACI,IAAI,CAACT,KAAK;MAC3C,EAAE,OAAOc,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;QACAd,KAAK,CAACa,KAAI,GAAI,CACZ;UAAEE,EAAE,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAgB,CAAC,EACrC;UAAED,EAAE,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAiB,CAAC,EACtC;UAAED,EAAE,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAgB,EACrC;QACDd,aAAa,CAACW,KAAI,GAAIb,KAAK,CAACa,KAAK;MACnC;IACF,CAAC;;IAED;IACA,MAAMI,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMC,KAAI,GAAIjB,WAAW,CAACY,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpDb,OAAO,CAACC,GAAG,CAAC,0BAA0BU,KAAK,GAAG,CAAC;MAE/C,IAAI,CAACA,KAAK,EAAE;QACVhB,aAAa,CAACW,KAAI,GAAIb,KAAK,CAACa,KAAK;QACjC;MACF;MAEAX,aAAa,CAACW,KAAI,GAAIb,KAAK,CAACa,KAAK,CAACQ,MAAM,CAACC,IAAG,IAC1CA,IAAI,CAACN,SAAS,CAACI,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACL,KAAK,CAC7C,CAAC;MAEDX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,aAAa,CAACW,KAAK,CAAC;IACrD,CAAC;IAED,MAAMW,eAAc,GAAKF,IAAI,IAAK;MAChCG,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;MAC5DnB,MAAM,CAAC0B,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEDjC,SAAS,CAACQ,UAAU,CAAC;IAErB,OAAO;MACLJ,KAAK;MACLC,WAAW;MACXC,aAAa;MACbe,WAAW;MACXO;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}